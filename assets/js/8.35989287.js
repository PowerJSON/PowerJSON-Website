(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{270:function(t,a,s){"use strict";s.r(a);var e=s(38),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"pjson-grammar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pjson-grammar","aria-hidden":"true"}},[t._v("#")]),t._v(" PJSON Grammar")]),t._v(" "),s("p",[t._v("✏️ The syntax of PowerJSON is basically similar to JSON. In this document we only cover the differences between PowerJSON and JSON. If you need to view the JSON syntax, please click "),s("a",{attrs:{href:"https://json.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"strings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strings","aria-hidden":"true"}},[t._v("#")]),t._v(" Strings")]),t._v(" "),s("p",[t._v("PowerJSON provides "),s("strong",[t._v("3")]),t._v(" strings: "),s("strong",[t._v("single quoted string")]),t._v(", "),s("strong",[t._v("double quoted string")]),t._v(", "),s("strong",[t._v("multi-line string")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is a single quoted string (single line)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is a double quoted string (single line)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is a multi-line string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hello\nWorld")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n")])])]),s("h2",{attrs:{id:"comments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comments","aria-hidden":"true"}},[t._v("#")]),t._v(" Comments")]),t._v(" "),s("p",[t._v("In PowerJSON, comments are divided into "),s("strong",[t._v("single-line comments")]),t._v(" and "),s("strong",[t._v("multi-line comments")]),t._v(", which are written in exactly the same way as comments in JavaScript:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Single line comment")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Multi-line comment\n */")]),t._v("\n")])])]),s("h2",{attrs:{id:"object-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-name","aria-hidden":"true"}},[t._v("#")]),t._v(" Object Name")]),t._v(" "),s("p",[t._v("The object property name of PowerJSON can be omitted without adding "),s("code",[t._v('""')]),t._v(", for example:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("And in JSON you need to write like this:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"operator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#operator","aria-hidden":"true"}},[t._v("#")]),t._v(" Operator")]),t._v(" "),s("p",[t._v("The operators in PowerJSON are a very powerful feature, and if you need to calculate some complex mathematical operations, you will no longer need to calculate them.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// You can also implement string stitching.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"file-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#file-data","aria-hidden":"true"}},[t._v("#")]),t._v(" File data")]),t._v(" "),s("p",[t._v("Another powerful feature of PowerJSON is the ability to support referenced files. You only need to use the "),s("code",[t._v("new File()")]),t._v(" function: "),s("strong",[t._v("(Note! PJSON reads files will be read synchronously)")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file path'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"http-get-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-get-data","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP GET Data")]),t._v(" "),s("p",[t._v("You can use the "),s("code",[t._v("new GET()")]),t._v(" function to create a GET request to get a file under a URL: "),s("strong",[t._v("(note! PJSON will send a synchronous GET request)")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'URL path'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"import-other-pjson-files"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#import-other-pjson-files","aria-hidden":"true"}},[t._v("#")]),t._v(" Import other "),s("code",[t._v(".pjson")]),t._v(" files")]),t._v(" "),s("p",[t._v("PowerJSON allows you to import other "),s("code",[t._v(".pjson")]),t._v(" files using the "),s("code",[t._v("new PJSON()")]),t._v(" function: "),s("strong",[t._v("(note! the import process will be executed synchronously)")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PJSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Other .pjson file paths'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])},[],!1,null,null,null);a.default=n.exports}}]);